DROP ALL OBJECTS;

CREATE TABLE IF NOT EXISTS ratings_mpa
(
    id          INTEGER generated by default as identity primary key,
    name        VARCHAR(255) NOT NULL UNIQUE,
    description VARCHAR(255) NOT NULL
    );

CREATE TABLE IF NOT EXISTS films
(
    id           INTEGER generated by default as identity,
    name         VARCHAR(255) NOT NULL,
    description  VARCHAR(200),
    release_date DATE         NOT NULL,
    duration     INTEGER          NOT NULL,
    rating_id    INTEGER          NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT fk_rating_id FOREIGN KEY (rating_id) REFERENCES ratings_mpa (id) ON DELETE RESTRICT
    );

CREATE TABLE IF NOT EXISTS genres
(
    id   INTEGER generated by default as identity primary key,
    name VARCHAR(255) NOT NULL UNIQUE
    );

CREATE TABLE IF NOT EXISTS film_genres
(
    film_id  INTEGER REFERENCES films (id) ON DELETE CASCADE,
    genre_id INTEGER REFERENCES genres (id) ON DELETE RESTRICT,
    PRIMARY KEY (film_id, genre_id)
    );

CREATE TABLE IF NOT EXISTS users
(
    id       INTEGER generated by default as identity primary key,
    email    VARCHAR(255) NOT NULL,
    login    VARCHAR(255) NOT NULL UNIQUE,
    name     VARCHAR(255),
    birthday DATE
    );

CREATE TABLE IF NOT EXISTS film_likes
(
    film_id  INTEGER REFERENCES films (id) ON DELETE CASCADE,
    user_id INTEGER REFERENCES users (id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, user_id)
    );

CREATE TABLE IF NOT EXISTS friends
(
    user_id INTEGER REFERENCES users (id) ON DELETE CASCADE,
    friend_id INTEGER REFERENCES users (id) ON DELETE CASCADE,
    status boolean,
    PRIMARY KEY (user_id, friend_id)
    );